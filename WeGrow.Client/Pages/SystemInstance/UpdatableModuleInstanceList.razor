@using WeGrow.Models.SystemInstances
@code {
    [Parameter]
    public List<ModuleInstanceViewModel> Items { get; set; }
    [Parameter]
    public EventCallback<List<ModuleInstanceViewModel>> ItemsChanged { get; set; }
    [Parameter]
    public string Title { get; set; }
}
<style type="text/css">
    .mud-table-head .header-centered th {
        text-align: center;
        font-size: 1.2em;
    }
</style>
@{
    <MudTable style="border: 2px solid black;" Items="@Items" Breakpoint="Breakpoint.Sm" LoadingProgressColor="Color.Info" Striped="true" Bordered="true" HeaderClass="table-head-bordered" CustomHeader="true" Hover="true" >
        <ToolBarContent>
            <MudText Typo="Typo.h5">@Title</MudText>
            <MudSpacer />
        </ToolBarContent>
        <HeaderContent>
            <MudTHeadRow IsCheckable="true">
                <MudTh>Id</MudTh>
                <MudTh>Module name</MudTh>
                <MudTh>Last response time</MudTh>
                <MudTh>Last update</MudTh>
                <MudTh>Belongs to system</MudTh>
                <MudTh>Actions</MudTh>
            </MudTHeadRow>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Id">@context.Id</MudTd>
            <MudTd DataLabel="Module name">@context.ModuleName</MudTd>
            <MudTd DataLabel="Last response time">@context.LastResponse</MudTd>
            <MudTd DataLabel="Last update">@context.LastResponseItem</MudTd>
            <MudTd DataLabel="Belongs to system">@context.System_Id</MudTd>
            <MudTd DataLabel="Actions">
                           <MudIconButton Icon="@Icons.Filled.Autorenew" aria-label="update" OnClick="events => OnRenew(context)"></MudIconButton>

            </MudTd>
        </RowTemplate>
    </MudTable>

}
@code{
    private async Task OnRenew(ModuleInstanceViewModel item)
    {
        await ItemsChanged.InvokeAsync(Items);
    }
}
