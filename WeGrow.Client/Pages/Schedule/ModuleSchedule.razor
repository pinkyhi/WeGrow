@using WeGrow.Client.Services
@using WeGrow.Models.Schedules
@using WeGrow.Models.SystemInstances
@code {
    [Inject] public IChartService chartService { get; set; } 

    [Parameter]
    public ModuleInstanceViewModel Module { get; set; }

    public ModuleScheduleModel Schedule { get; set; } = new();

    private int currentDay = 0;
    private bool IsCreating = true;
}
@{
    Dictionary<int, double> xy = new();
    xy.Add(0, 0);
    xy.Add(12, 6);
    xy.Add(24, 3);
    Schedule.ModuleInstanceId = Module.Id;
    Schedule.ModuleName = Module.ModuleName;
    Schedule.ModuleSubject = Module.Subject;
    Schedule.DaysCount = 90;
    
    if(Schedule.Intervals.Count == 0)
    {
            Schedule.Intervals = new();
        Schedule.Intervals.Add(new ScheduleIntervalModel()
        {
            From = 0,
            To = 60,
            //DayPatternValues = xy
        });
    }
    

    //var xx = chartService.GetExactValue(destChart, 5.54);
}
<MudPaper Outlined="false" Elevation="0" Class="d-flex flex-column flex-1">
    <MudText Typo="Typo.h5">Module name: @Module.ModuleName</MudText>
    <MudText Typo="Typo.h6">#@Module.Module_Id</MudText>

    <MudExpansionPanels MultiExpansion="true">
        @for(int i = 0; i < Schedule.Intervals.Count; i++)
        {
            var interval = Schedule.Intervals.ElementAt(i);
            if(interval.DayPatternValues.Count < 2)
            {
                interval.DayPatternValues.Add(0, 0);
                interval.DayPatternValues.Add(24, 10);
            }

            <MudExpansionPanel Text="@($"From: {interval.From}; To: {interval.To};")">
                <MudButton Style="margin-left: auto;" Variant="Variant.Outlined" Color="Color.Error" OnClick="events => RemoveInterval(interval)">Remove this interval</MudButton>
                <ModuleScheduleIntervalComponent @bind-PatternValues="interval.DayPatternValues" ChartName="@Module.Subject.ToString()" IsEditing="IsCreating"/>
            </MudExpansionPanel>
        }
    </MudExpansionPanels>
</MudPaper> 

@code{
    private void RemoveInterval(ScheduleIntervalModel interval)
    {
        Schedule.Intervals.Remove(interval);
    }
}